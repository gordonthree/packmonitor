; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = avr128da28_0x37



[env:fuses_bootloader]
board_hardware.oscillator = external
board_hardware.uart = uart0
board_bootloader.speed = 115200
board_hardware.bod = 2.7v
board_hardware.eesave = yes
upload_protocol = usbtiny


[env:avr128da28_0x37]
platform = atmelmegaavr
;platform_packages = 
; platformio/framework-arduino-megaavr-dxcore
framework = arduino
board = AVR128DA28
board_build.f_cpu = 24000000L
board_hardware.oscillator = internal
board_build.variant = 28pin-standard
build_unflags =
build_flags = -D MCU_AVR128DA28
              -D I2C_SLAVE_ADDR=0x37
			  -D TWI_MANDS_SINGLE ; From Arduino.h

monitor_speed = 57600
monitor_port = /dev/ttyUSB0
upload_protocol = custom
upload_flags =
    -tuart 
	-davr128da28
    -u$UPLOAD_PORT 
    -c$UPLOAD_SPEED
    -vwarning
upload_command = echo $UPLOAD_FLAGS && pymcuprog erase $UPLOAD_FLAGS && pymcuprog write $UPLOAD_FLAGS -f $SOURCE
;upload_command = echo $UPLOAD_FLAGS
upload_port = /dev/ttyUSB1
upload_speed = 230400
lib_deps =
 https://github.com/PaulStoffregen/Time
 robtillaart/I2C_EEPROM
 https://github.com/gordonthree/packmonlib

[env:avr128da28_0x39]
platform = atmelmegaavr
;platform_packages = 
; platformio/framework-arduino-megaavr-dxcore
framework = arduino
board = AVR128DA28
board_build.f_cpu = 24000000L
board_hardware.oscillator = internal
board_build.variant = 28pin-standard
build_unflags =
build_flags = -D MCU_AVR128DA28
              -D I2C_SLAVE_ADDR=0x39
			  -D TWI_MANDS_SINGLE ; From Arduino.h

monitor_speed = 57600
monitor_port = /dev/ttyUSB0
upload_protocol = custom
upload_flags =
    -tuart 
	-davr128da28
    -u$UPLOAD_PORT 
    -c$UPLOAD_SPEED
    -vwarning
upload_command = echo $UPLOAD_FLAGS && pymcuprog erase $UPLOAD_FLAGS && pymcuprog write $UPLOAD_FLAGS -f $SOURCE
;upload_command = pymcuprog erase $UPLOAD_FLAGS && pymcuprog write $UPLOAD_FLAGS -f $SOURCE
upload_port = /dev/ttyUSB2
upload_speed = 230400
lib_deps =
 https://github.com/PaulStoffregen/Time
 robtillaart/I2C_EEPROM
 https://github.com/gordonthree/packmonlib


[env:avr128da32]
platform = atmelmegaavr
framework = arduino
board = AVR128DA32
board_build.f_cpu = 24000000L
board_hardware.oscillator = internal
board_build.variant = 32pin-standard
build_unflags =
build_flags = -D MCU_AVR128DA32
              -D I2C_SLAVE_ADDR=0x33
			  -D TWI_MORS_BOTH ; From Arduino.h
			  -D TWI_USING_WIRE1
			  -D TWI_MORS

monitor_speed = 921600
monitor_port = /dev/ttyACM0
lib_deps =
 https://github.com/PaulStoffregen/Time
 robtillaart/I2C_EEPROM
 https://github.com/gordonthree/packmonlib

[env:every_fuses_bootloader]
; Upload protocol for used to set fuses/bootloader
upload_protocol = ${env:Upload_UPDI.upload_protocol}
upload_flags = -v
; Hardware settings
board_hardware.bod = 2.7v
board_hardware.eesave = yes
board_hardware.uart = no_bootloader
board_hardware.rstpin = reset

[env:Upload_UPDI]
; Upload protocol for UPDI upload
upload_protocol = jtag2updi
upload_port = /dev/ttyUSB0
board_upload.speed = 115200
;upload_protocol = xplainedmini_updi
upload_flags = -v
;extra_scripts = pre:reset.py
board_upload.use_1200bps_touch = yes
board_upload.wait_for_upload_port = yes

