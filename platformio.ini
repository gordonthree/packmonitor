; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = Upload_UART

[env]
platform = atmelavr
framework = arduino
board = ATmega328P
board_build.f_cpu = 16000000L
build_unflags = -flto
build_flags = -DMCU_ATMEGA328P
monitor_port = ${env:Upload_UART.upload_port}
monitor_speed = 115200
lib_deps = https://github.com/PaulStoffregen/Time

[env:Upload_UART]
upload_protocol = arduino
upload_port = /dev/ttyUSB0
board_upload.speed = ${env:fuses_bootloader.board_bootloader.speed}

[env:Upload_ISP]
upload_protocol = custom
upload_flags = 
	-C$PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf
	-p$BOARD_MCU
	-PUSB
	-cusbasp
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

[env:fuses_bootloader]
board_hardware.oscillator = external
board_hardware.uart = uart0
board_bootloader.speed = 115200
board_hardware.bod = 2.7v
board_hardware.eesave = yes
upload_protocol = usbtiny

[env:ATmega4808]
platform = atmelmegaavr
framework = arduino
board = ATmega4808
board_build.f_cpu = 16000000L
board_hardware.oscillator = internal
board_build.variant = 32pin-standard
build_unflags = 
build_flags = -DMCU_ATMEGA4808
monitor_speed = 115200

[env:nano_every]
platform = atmelmegaavr
framework = arduino
board = nano_every
board_build.f_cpu = 16000000L
board_hardware.oscillator = internal
board_build.variant = 48pin-standard
build_unflags =
build_flags = -DMCU_ATMEGA4809
monitor_speed = 115200
; Upload protocol for used to set fuses/bootloader
upload_protocol = ${env:Upload_UPDI.upload_protocol}
upload_flags =

; Run the following command to upload with this environment
; pio run -e Upload_UPDI -t upload
[env:Upload_UPDI]
; Upload protocol for UPDI upload
upload_protocol = xplainedmini_updi
upload_flags =
